package com.jeecms.cms.action.front;

import static com.jeecms.common.page.SimplePage.cpn;

import java.io.IOException;
import java.util.Date;
import java.util.Set;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.jeecms.cms.entity.assist.CmsBallot;
import com.jeecms.cms.entity.assist.CmsBallotItem;
import com.jeecms.cms.entity.assist.CmsBallotRecord;
import com.jeecms.cms.manager.CmsBallotRecordMng;
import com.jeecms.cms.manager.assist.CmsBallotItemMng;
import com.jeecms.cms.manager.assist.CmsBallotMng;
import com.jeecms.common.page.Pagination;
import com.jeecms.common.web.CookieUtils;
import com.jeecms.common.web.RequestUtils;
import com.jeecms.core.entity.CmsSite;
import com.jeecms.core.web.util.CmsUtils;
import com.jeecms.core.web.util.FrontUtils;


@Controller
public class BallotItemAct {
	private static final Logger log = LoggerFactory.getLogger(BallotItemAct.class);
	public static final String DIR = "ballotItem";
	public static final String BALLOTITEM_LIST = "tpl.ballotItemList";
	
	@RequestMapping(value = "/ballotItem/vote.jspx", method = RequestMethod.POST)
	public void vote(HttpServletRequest request,
			HttpServletResponse response, ModelMap model){
		CmsSite site = CmsUtils.getSite(request);
		String ids = request.getParameter("ids");
		if(ids.length()>0){
			CmsBallotItem item = manager.findById(new Integer(ids));
			String ip = RequestUtils.getIpAddr(request);
			boolean result = recordManager.existGive(ip, ids);
			if(result){
				try {
					response.getWriter().write("failure");
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}else{
				int voteCount = item.getVoteCount().intValue();
				voteCount = voteCount+1;
				item.setVoteCount(new Integer(voteCount));
				manager.update(item);
				CmsBallotRecord record = new CmsBallotRecord();
				record.setItem(item);
				record.setVoteTime(new Date());
				record.setVoteCookie("");
				record.setVoteIp(RequestUtils.getIpAddr(request));
				record.setWxopenId("");
				recordManager.save(record);
				try {
					response.getWriter().write("success"+voteCount);
					
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
			
		}
	}
	@RequestMapping(value = "/ballotItem/list.jspx", method = RequestMethod.GET)
	public String list(Integer pageNo, Integer ctgId,
			HttpServletRequest request, HttpServletResponse response,
			ModelMap model){
		CmsSite site = CmsUtils.getSite(request);
		FrontUtils.frontData(request, model, site);
		String ballotId = request.getParameter("ballotId");
		CmsBallot ballot = ballotManager.findById(new Integer(ballotId));
		Pagination pagination = manager.getPage(new Integer(ballotId),cpn(pageNo), CookieUtils.getPageSize(request));
		model.addAttribute("pagination", pagination);
		model.addAttribute("ballotId", ballotId);
		model.addAttribute("ballot", ballot);
		return FrontUtils.getTplPath(request, site.getSolutionPath(),DIR, BALLOTITEM_LIST);
	}
	@Autowired
	private CmsBallotItemMng manager;
	@Autowired
	private CmsBallotMng ballotManager;
	@Autowired
	private CmsBallotRecordMng recordManager;
}
