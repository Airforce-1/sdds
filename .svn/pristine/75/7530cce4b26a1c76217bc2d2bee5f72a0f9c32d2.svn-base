package com.jeecms.core.dao.impl;

import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.hibernate.Query;
import org.springframework.stereotype.Repository;

import com.jeecms.common.hibernate4.Finder;
import com.jeecms.common.hibernate4.HibernateBaseDao;
import com.jeecms.common.page.Pagination;
import com.jeecms.core.dao.CmsUserDao;
import com.jeecms.core.entity.CmsUser;

@Repository
public class CmsUserDaoImpl extends HibernateBaseDao<CmsUser, Integer>
		implements CmsUserDao {
	public Pagination getPage(String username, String email, Integer siteId,
			Integer groupId, Boolean disabled, Boolean admin, Integer rank,
			String realName,Integer departId,Integer roleId,
			Boolean allChannel,Boolean allControlChannel,
			int pageNo, int pageSize,String sddscpUsertype,String isadminlist) {
		String hql = "";
		if("1".equals(isadminlist)){
			hql = "select bean from CmsUser bean ";
		}else if("0".equals(isadminlist)){
			hql = "select bean from CmsUser bean join bean.userExtSet ext ";
		}else {
			
		}
		Finder f = Finder.create(hql);
		if (siteId != null||allChannel!=null||allControlChannel!=null) {
			f.append(" join bean.userSites userSite");
		}
		if(roleId!=null){
			f.append(" join bean.roles role ");
		}
		f.append(" where 1=1");
		if(siteId!=null){
			f.append(" and  userSite.site.id=:siteId");
			f.setParam("siteId", siteId);
		}
		if (!StringUtils.isBlank(username)) {
			f.append(" and bean.username like :username");
			f.setParam("username", "%" + username + "%");
		}
		if (!StringUtils.isBlank(email)) {
			f.append(" and bean.email like :email");
			f.setParam("email", "%" + email + "%");
		}
		if (groupId != null) {
			f.append(" and bean.group.id=:groupId");
			f.setParam("groupId", groupId);
		}
		if (disabled != null) {
			f.append(" and bean.disabled=:disabled");
			f.setParam("disabled", disabled);
		}
		if (admin != null) {
			f.append(" and bean.admin=:admin");
			f.setParam("admin", admin);
		}
		if (rank != null) {
			f.append(" and bean.rank<=:rank");
			f.setParam("rank", rank);
		}
		if("0".equals(isadminlist)){
			if (!StringUtils.isBlank(realName)) {
				f.append(" and ext.realname like :realname");
				f.setParam("realname", "%" + realName + "%");
			}
		}
		if(departId!=null){
			f.append(" and bean.department.id=:departId");
			f.setParam("departId", departId);
		}
		if(roleId!=null){
			f.append(" and role.id=:roleId");
			f.setParam("roleId", roleId);
		}
		if (allChannel != null) {
			f.append(" and userSite.allChannel=:allChannel");
			f.setParam("allChannel", allChannel);
		}
		if (allControlChannel != null) {
			f.append(" and userSite.allChannelControl=:allControlChannel");
			f.setParam("allControlChannel", allControlChannel);
		}
		//用户有多个站的管理权限需要去重复
		/*
		if(allChannel!=null||allControlChannel!=null){
			f.append(" group by bean having count(bean)=1");
		}
		*/
		if(!StringUtils.isBlank(sddscpUsertype)){
			f.append(" and bean.sddscpUsertype=:sddscpUsertype ");
			f.setParam("sddscpUsertype", sddscpUsertype);
		}
		if("0".equals(isadminlist)){
			f.append(" and bean.sddscpIsperororg=:sddscpIsperororg ");
			f.setParam("sddscpIsperororg", "1");
		}
		f.append(" order by bean.id desc");
		return find(f, pageNo, pageSize);
	}
	
	@SuppressWarnings("unchecked")
	public List<CmsUser> getList(String username, String email, Integer siteId,
			Integer groupId, Boolean disabled, Boolean admin, Integer rank) {
		Finder f = Finder.create("select bean from CmsUser bean");
		if (siteId != null) {
			f.append(" join bean.userSites userSite");
			f.append(" where userSite.site.id=:siteId");
			f.setParam("siteId", siteId);
		} else {
			f.append(" where 1=1");
		}
		if (!StringUtils.isBlank(username)) {
			f.append(" and bean.username like :username");
			f.setParam("username", "%" + username + "%");
		}
		if (!StringUtils.isBlank(email)) {
			f.append(" and bean.email like :email");
			f.setParam("email", "%" + email + "%");
		}
		if (groupId != null) {
			f.append(" and bean.group.id=:groupId");
			f.setParam("groupId", groupId);
		}
		if (disabled != null) {
			f.append(" and bean.disabled=:disabled");
			f.setParam("disabled", disabled);
		}
		if (admin != null) {
			f.append(" and bean.admin=:admin");
			f.setParam("admin", admin);
		}
		if (rank != null) {
			f.append(" and bean.rank<=:rank");
			f.setParam("rank", rank);
		}
		f.append(" order by bean.id desc");
		return find(f);
	}

	@SuppressWarnings("unchecked")
	public List<CmsUser> getAdminList(Integer siteId, Boolean allChannel,
			Boolean disabled, Integer rank) {
		Finder f = Finder.create("select bean from CmsUser");
		f.append(" bean join bean.userSites us");
		f.append(" where us.site.id=:siteId");
		f.setParam("siteId", siteId);
		if (allChannel != null) {
			f.append(" and us.allChannel=:allChannel");
			f.setParam("allChannel", allChannel);
		}
		if (disabled != null) {
			f.append(" and bean.disabled=:disabled");
			f.setParam("disabled", disabled);
		}
		if (rank != null) {
			f.append(" and bean.rank<=:rank");
			f.setParam("rank", rank);
		}
		f.append(" and bean.admin=true");
		f.append(" order by bean.id asc");
		return find(f);
	}
	
	public Pagination getAdminsByDepartId(Integer id, int pageNo,int pageSize){
		Finder f = Finder.create("select bean from CmsUser bean ");
		f.append(" where bean.department.id=:departId");
		f.setParam("departId", id);
		f.append(" and bean.admin=true");
		f.append(" order by bean.id asc");
		return find(f,pageNo,pageSize);
	}
	
	public Pagination getAdminsByRoleId(Integer roleId, int pageNo, int pageSize){
		Finder f = Finder.create("select bean from CmsUser");
		f.append(" bean join bean.roles role");
		f.append(" where role.id=:roleId");
		f.setParam("roleId", roleId);
		f.append(" and bean.admin=true");
		f.append(" order by bean.id asc");
		return find(f,pageNo,pageSize);
	}

	public CmsUser findById(Integer id) {
		CmsUser entity = get(id);
		return entity;
	}

	public CmsUser findByUsername(String username) {
		return findUniqueByProperty("username", username);
	}

	public int countByUsername(String username) {
		String hql = "select count(*) from CmsUser bean where bean.username=:username";
		Query query = getSession().createQuery(hql);
		query.setParameter("username", username);
		return ((Number) query.iterate().next()).intValue();
	}
	public int countMemberByUsername(String username) {
		String hql = "select count(*) from CmsUser bean where bean.username=:username and bean.admin=false";
		Query query = getSession().createQuery(hql);
		query.setParameter("username", username);
		return ((Number) query.iterate().next()).intValue();
	}

	public int countByEmail(String email) {
		String hql = "select count(*) from CmsUser bean where bean.email=:email";
		Query query = getSession().createQuery(hql);
		query.setParameter("email", email);
		return ((Number) query.iterate().next()).intValue();
	}

	public CmsUser save(CmsUser bean) {
		getSession().save(bean);
		return bean;
	}

	public CmsUser deleteById(Integer id) {
		CmsUser entity = super.get(id);
		if (entity != null) {
			getSession().delete(entity);
		}
		return entity;
	}
	
	/**
	 * 根据身份证号来查询人员信息
	 * date:2016/10/11
	 * author:dongliang
	 */
	
	public CmsUser findByUserCardId(String sddscpIdnumber){
		return findUniqueByProperty("sddscpIdnumber", sddscpIdnumber);
	}
	/**
     * 根据组织ID删除数据
     * 删除组织时，级联删除user表数据(仅限删除组织时使用)
     */
    public Integer deleteUserBydepartid(Integer departId){
    	String sql = " delete from JC_USER WHERE depart_id = " + departId;
    	Query query = getSession().createSQLQuery(sql);
    	return query.executeUpdate();
    }
    /**
	 * 根据组织ID查人员
	 * @param departId
	 * @param pageNo
	 * @param pageSize
	 * @return
	 */
	public Pagination getMemberByDepartId(Integer departId,String sddscpUsertype,int pageNo,int pageSize){
		Finder finder = Finder.create("select bean from CmsUser bean ");
		finder.append(" where bean.department.id=:departId");
		finder.setParam("departId", departId);
		if(!StringUtils.isBlank(sddscpUsertype)){
			finder.append(" and bean.sddscpUsertype=:sddscpUsertype");
			finder.setParam("sddscpUsertype", sddscpUsertype);
		}
		finder.append(" and bean.admin=false");
		finder.append(" order by bean.id asc");
		return find(finder,pageNo,pageSize);
	}
	/**
	 * 重写登录方法
	 */
	public CmsUser findByLogincode(String logincode){
		return findUniqueByProperty("sddscpOrglogincode", logincode);
	}
	@Override
	protected Class<CmsUser> getEntityClass() {
		return CmsUser.class;
	}

	@Override
	public List<CmsUser> queryMeberByName(String name) {
		String sql ="select * from jc_user t where username like '"+name+"%'";
		List<CmsUser> list=getSession().createSQLQuery(sql).addEntity(CmsUser.class).list();
		return list;
	}
	 /**
	  * 支部换届
	  * 撤职
	  * orgtype : 工作指导组（不匹配） 机关党委 党总支 支部  
	  */
	 public CmsUser changeSecretaryczByUid(CmsUser user,String orgtype){
		 String param = "";
		 if("机关党委".equals(orgtype)){
			 param = "sddscpJgdwjob";
		 }else if("党组织".equals(orgtype)){
			 param = "sddscpDzzjob";
		 }else if("支部".equals(orgtype)){
			 param = "sddscpZbjob";
		 }else {
			 param = "sddscpJgdwjob";	//如果为空即为机关党委
		 }
		 String hql = "update Cmsuser bean set bean."+param+" =:job where bean.id =:oid";	//撤职hql
		 Query query = getSession().createQuery(hql);
		 query.setParameter("job", "");
		 query.setParameter("oid", user.getId());
		 query.executeUpdate();
		 return user;
	 }
	 /**
	  * 支部换届
	  * 任职
	  * orgtype 同上
	  */
	 public CmsUser changeSecretaryrzByUid(CmsUser user,String orgtype){
		 String param = "";
		 if("机关党委".equals(orgtype)){
			 param = "sddscpJgdwjob";
		 }else if("党组织".equals(orgtype)){
			 param = "sddscpDzzjob";
		 }else if("支部".equals(orgtype)){
			 param = "sddscpZbjob";
		 }else {
			 param = "sddscpJgdwjob";	//如果为空即为机关党委
		 }
		 String hql = "update Cmsuser bean set bean."+param+" =:job where bean.id =:nid";
		 Query query = getSession().createQuery(hql);
		 query.setParameter("job", "书记");	//先默认写死为书记，后做更改再动态传参匹配
		 query.setParameter("nid", user.getId());
		 query.executeUpdate();
		 return user;
	 }
	 /**
		 * 修改user数据工具
		 */
    public void changeuserdatatool(Integer departid,Integer userid){
    	String hql = "update CmsUser bean set bean.department.id =:departid where bean.id =:userid";
    	Query query = getSession().createQuery(hql);
    	query.setParameter("departid", departid);
    	query.setParameter("userid", userid);
    	query.executeUpdate();
    }
	/**
	 * 修改user数据工具
	 */
    @SuppressWarnings("unchecked")
	 public List<CmsUser> findalllistuser(boolean all){
    	String hql = " from CmsUser bean where bean.sddscpIsperororg ='2'";
		if(!all){
			hql += " and bean.department.id = 1";
		}
		Finder finder = Finder.create(hql);
		return find(finder);
	 }
}